apply from: "$rootDir/tools/common-jacoco.gradle"

def coverageSourceDirs = []
def taskList = []
def coverageClassDirectories = []
def modulesList = [Modules.app, Modules.coreData, Modules.coreDomain, Modules.corePresentation,
                   Modules.charts]
def executionDataList = []

modulesList.each { module ->
    taskList.add("$module:jacocoTestReport")
    def modulePath = module.replace(":", "/")
    if (modulePath.startsWith("/")) {
        modulePath = modulePath.drop(1)
    }
    coverageSourceDirs.add("$modulePath/src/main/java")
    coverageClassDirectories.add(fileTree(dir: "$modulePath/build/tmp/kotlin-classes/debug", excludes: project.coverageExcludes))
}

task jacocoMergeReport(type: JacocoReport) {
    dependsOn taskList

    taskList.each { executionDataList.add(tasks.getByPath(it).executionData) }

    additionalSourceDirs.setFrom(files(coverageSourceDirs))
    sourceDirectories.setFrom(files(coverageSourceDirs))
    classDirectories.setFrom(files(coverageClassDirectories))
    executionData.setFrom(files(executionDataList))

    reports {
        html.enabled = true
        xml.enabled = true
        csv.enabled = false
    }
    onlyIf = {
        true
    }

    doFirst {
        def data = files(executionData.findAll {
            it.exists()
        })
        executionData.setFrom(data)
    }
}

tasks.withType(Test) {
    jacoco.includeNoLocationClasses = true
}